<?php

/**
 * @file
 * Installation code for the download_count module.
 */

/**
 * Implements hook_schema().
 */
function download_count_schema() {
  $schema['download_count'] = array(
    'fields' => array(
      'dcid' => array(
        'description' => 'Primary Key: Unique download count id.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'fid' => array(
        'description' => 'The {file_managed}.fid of the file downloaded.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The {user}.uid of user who downloaded the file.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The name of the entity type to which the file was attached when downloaded.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'id' => array(
        'description' => 'The primary key of the entity to which the file was attached when downloaded.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'ip_address' => array(
        'description' => 'The IP address of the downloading user.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'referrer' => array(
        'description' => 'Referrer URI.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'timestamp' => array(
        'description' => 'The date-time the file was downloaded.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('dcid'),
    'indexes' => array(
      'dc_fid' => array('fid'),
      'dc_uid' => array('uid'),
      'dc_type' => array('type'),
      'dc_id' => array('id'),
      'dc_ip' => array('ip_address'),
      'dc_timestamp' => array('timestamp'),
      'dc_fid_type_id' => array('fid', 'type', 'id'),
    ),
  );

  $schema['download_count_cache'] = array(
    'fields' => array(
      'dcc_id' => array(
        'description' => 'Primary Key: Unique download count cache id.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'fid' => array(
        'description' => 'The {file_managed}.fid of the file downloaded.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'type' => array(
        'description' => 'The name of the entity type to which the file was attached when downloaded.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'id' => array(
        'description' => 'The primary key of the entity to which the file was attached when downloaded.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'date' => array(
        'description' => 'The date the file was downloaded.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'count' => array(
        'description' => 'Number of times a file was downloaded in one day.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('dcc_id'),
    'indexes' => array(
      'dcc_fid' => array('fid'),
      'dcc_type' => array('type'),
      'dcc_id' => array('id'),
      'dcc_timestamp' => array('date'),
      'dcc_fid_type_id' => array('fid', 'type', 'id', 'date'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function download_count_uninstall() {
  \Drupal::service('config.factory')
    ->getEditable('download_count.settings')
    ->delete();
  drupal_set_message(t('The download count module has been uninstalled.'));
}

/**
 * Implements hook_install().
 *
 * Perform actions related to the installation of download_count.
 */
function download_count_install() {
  // Set some default permissions.
  _download_count_set_permissions();
}

/**
 * Function to set permissions.
 */
function _download_count_set_permissions() {
  $roles = \Drupal\user\Entity\Role::loadMultiple();

  /** @var \Drupal\user\Entity\Role $role */
  foreach ($roles as $role) {
    if ($role->id() === 'administrator') {
      continue;
    }

    $permissions = _download_count_get_permissions($role->id());
    user_role_grant_permissions($role->id(), $permissions);
  }
}

/**
 * @param $role
 * @return array
 */
function _download_count_get_permissions($role) {
  // Anonymous.
  $permissions['anonymous'] = array(
    'view download counts',
  );

  // Authenticated.
  $permissions['authenticated'] = array_merge($permissions['anonymous'], array(
    'view download counts',
  ));

  return $permissions[$role];
}
