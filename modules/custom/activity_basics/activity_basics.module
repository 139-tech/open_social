<?php

/**
 * @file
 * Contains activity_basics.module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\node\NodeInterface;

/**
 * Implements hook_entity_insert().
 */
function activity_basics_entity_insert(EntityInterface $entity) {
  switch ($entity->getEntityTypeId()) {
    case 'comment':
      $related_entity = $entity->getCommentedEntity();
      break;

    case 'vote':
      $related_entity = \Drupal::entityTypeManager()
        ->getStorage($entity->getVotedEntityType())
        ->load($entity->getVotedEntityId());
      break;
  }

  if (isset($related_entity) && $related_entity->getOwner()->isBlocked()) {
    return;
  }

  _activity_basics_entity_action($entity, 'create_entitiy_action');
}

/**
 * Implements hook_social_group_move().
 */
function activity_basics_social_group_move(NodeInterface $node) {
  $node->setCreatedTime($node->getChangedTime());
  _activity_basics_entity_action($node, 'move_entity_action');
}

/**
 * Create or modify some entity.
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 *   The entity.
 * @param string $instance
 *   The instance.
 */
function _activity_basics_entity_action(EntityInterface $entity, $instance) {
  \Drupal::service('plugin.manager.activity_action.processor')
    ->createInstance($instance)
    ->create($entity);
}
