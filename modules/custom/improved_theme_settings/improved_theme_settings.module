<?php
/**
 * @file
 * Improved theme settings module file.
 */


/**
 * Implements hook_form_FORM_ID_alter().
 */
function improved_theme_settings_form_system_theme_settings_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // If user has the improved settings, we don't alter nothing!
  if (\Drupal::currentUser()->hasPermission('administer improved theme settings')) {
    return;
  }

  // Our form contains all the correct id's so we can start the alteration!
  if (!empty($form['open_social_settings']) && !empty($form['os_color_settings']) && !empty($form['color'])) {
    // Unset theme updates
    $form['update']['#access'] = FALSE;

    // Unset Bootstrap settings, we don't need it.
    $form['bootstrap']['#access'] = FALSE;

    // Unset all the settings that are part of the bootstrap group.
    foreach ($form as $setting => $settings) {
      if (!empty($settings['#group']) && $settings['#group'] == "bootstrap") {
        $form[$setting]['#access'] = FALSE;
      }
    }

    // We want color to be rendered under open social settings in a tab.
    $form['color']['#group'] = "open_social_settings";
  }
}


/**
 * Implements hook_page_attachments().
 */
function improved_theme_settings_page_attachments(array &$page) {

  // If socialblue is our default theme.
  $system_theme_settings = \Drupal::configFactory()->get('system.theme')->get('default');

  // We render our color & font settings in the head.
  if ($system_theme_settings === 'socialblue') {

    $border_radius = theme_get_setting('border_radius', $system_theme_settings);

    if (\Drupal::moduleHandler()->moduleExists('social_font')) {
      // Render font value here.
      $font_rendered = social_font_render();
      dpm($font_rendered);
    }
    // Get the color palette saved for custom social blue
    $colors = color_get_palette('socialblue');

    $custom_style = '';

    if (!empty($font_rendered)) {
      $page['#attached']['html_head'][] = [
        [
          '#type' => 'html_tag',
          '#tag' => 'style',
          '#value' => $font_rendered,
        ],
        // A key, to make it possible to recognize this HTML element when altering.
        'social_theme_preprocess'
      ];
    }
  }
}