<?php

/**
 * @file
 * Installation file for Social Tagging.
 */

use Drupal\block\Entity\Block;
use Drupal\Core\Entity\EntityStorageException;

/**
 * Install the module.
 */
function social_tagging_install() {
  _social_tagging_assign_default_permissions();

  // Update field definitions.
  _social_tagging_field_definitions_update();

  // If the search module is enabled trigger updating of the indexes affected
  // by tagging.
  try {
    if (\Drupal::moduleHandler()->moduleExists('social_search')) {
      social_search_resave_search_indexes(['social_content', 'social_groups']);
    }
  }
  catch (EntityStorageException $e) {
    \Drupal::logger('social_tagging')->info($e->getMessage());
  }
}

/**
 * Assign the default permissions for this module.
 */
function _social_tagging_assign_default_permissions() {
  $permissions = [
    'administer social_tagging',
    'delete terms in social_tagging',
    'edit terms in social_tagging',
  ];

  // SM should be able to change the permissions.
  user_role_grant_permissions('sitemanager', $permissions);
}

/**
 * Implements hook_update_dependencies().
 */
function social_tagging_update_dependencies() {
  // Only create new block in 8.0 update after feature revert has completed.
  $dependencies['social_tagging'][8801] = [
    'social_core' => 8802,
  ];

  return $dependencies;
}

/**
 * Exclude landing pages from tagging.
 */
function social_tagging_update_8001() {
  // Set allow to true, since that's the case by default.
  $config = \Drupal::getContainer()->get('config.factory')->getEditable('social_tagging.settings');
  $config->set('tag_node_type_landing_page', FALSE)->save();
}

/**
 * Toggle group index.
 */
function social_tagging_update_8002() {
  // Update field definitions.
  _social_tagging_field_definitions_update();
  // Toggle the index groups.
  try {
    // If the search module is enabled we need to update the group index.
    if (\Drupal::moduleHandler()->moduleExists('social_search')) {
      social_search_resave_search_indexes(['social_groups']);
    }
  }
  catch (EntityStorageException $e) {
    \Drupal::logger('social_tagging')->info($e->getMessage());
  }
}

/**
 * Update the field definitions on install, or in an update hook.
 */
function _social_tagging_field_definitions_update() {
  // Create field storage for the 'Highlight' base field.
  \Drupal::entityTypeManager()->clearCachedDefinitions();
  \Drupal::service('entity.definition_update_manager')->applyUpdates();
}

/**
 * Add Social Group Tags Block.
 */
function social_tagging_update_8801() {
  Block::create([
    'status' => TRUE,
    'dependencies' => [
      'module' => [
        'social_tagging',
        'system',
      ],
      'theme' => [
        'socialblue',
      ],
      'enforced' => [
        'module' => [
          'social_tagging',
        ],
      ],
    ],
    'id' => 'socialgrouptagsblock',
    'theme' => 'socialblue',
    'region' => 'content',
    'weight' => 0,
    'provider' => NULL,
    'plugin' => 'social_group_tags_block',
    'settings' => [
      'id' => 'social_group_tags_block',
      'label' => 'Group Tags',
      'provider' => 'social_tagging',
      'label_display' => 'visible',
    ],
    'visibility' => [
      'request_path' => [
        'id' => 'request_path',
        'pages' => '/group/*/about',
        'negate' => FALSE,
        'context_mapping' => [],
      ],
    ],
  ])->save();
}
