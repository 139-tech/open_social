<?php

/**
 * @file
 * Install, update and uninstall functions for the social_follow_content module.
 */

use Drupal\user\Entity\Role;

/**
 * Implements hook_install().
 *
 * Perform actions related to the installation of social_follow_content.
 */
function social_follow_content_install() {

  // Set some default permissions.
  _social_follow_content_set_permissions();
}

/**
 * Set permissions and delete old functionality.
 */
function social_follow_content_update_8001() {
  _social_follow_content_set_permissions();

  $block = \Drupal::entityTypeManager()->getStorage('block')
    ->load('exposedformfollowingfollowing');

  if ($block) {
    $block->delete();
  }

  $config_names = [
    'views.view.following',
    'block.block.exposedformfollowingfollowing',
  ];

  foreach ($config_names as $config_name) {
    \Drupal::configFactory()->getEditable($config_name)->delete();
  }
}

/**
 * Function to set permissions.
 */
function _social_follow_content_set_permissions() {
  $roles = Role::loadMultiple();

  /** @var \Drupal\user\Entity\Role $role */
  foreach ($roles as $role) {
    if ($role->id() === 'administrator') {
      continue;
    }

    $permissions = _social_follow_content_get_permissions($role->id());
    if (!empty($permissions)) {
      user_role_grant_permissions($role->id(), $permissions);
    }
  }
}

/**
 * Build permissions.
 *
 * @param string $role
 *   The role.
 *
 * @return array
 *   Returns an array containing the permissions.
 */
function _social_follow_content_get_permissions($role) {
  // Anonymous.
  $permissions['anonymous'] = [];

  // Authenticated.
  $permissions['authenticated'] = array_merge($permissions['anonymous'], [
    'flag follow_content',
    'flag follow_post',
    'unflag follow_content',
    'unflag follow_post',
  ]);

  // Content manager.
  $permissions['contentmanager'] = array_merge($permissions['authenticated'], []);

  // Site manager.
  $permissions['sitemanager'] = array_merge($permissions['contentmanager'], []);

  if (isset($permissions[$role])) {
    return $permissions[$role];
  }
  return [];
}
