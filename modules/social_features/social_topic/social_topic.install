<?php
/**
 * @file
 * Install, update and uninstall functions for the social_topic module.
 */

use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_install().
 *
 * Perform actions related to the installation of social_topic.
 */
function social_topic_install() {

  // Set some default permissions.
  _social_topic_set_permissions();

  // Create some default taxonomy terms.
  $terms = array(
    'Blog',
    'Discussion',
    'News',
  );

  foreach ($terms as $term_name) {
    $term = Term::create([
      'vid' => 'topic_types',
      'name' => $term_name,
    ]);
    $term->save();
  }
}

/**
 * Function to set permissions.
 */
function _social_topic_set_permissions() {
  $roles = \Drupal\user\Entity\Role::loadMultiple();

  /** @var \Drupal\user\Entity\Role $role */
  foreach ($roles as $role) {
    $permissions = _social_topic_get_permissions($role->id());
    user_role_grant_permissions($role->id(), $permissions);
  }
}

/**
 * @param $role
 * @return array
 */
function _social_topic_get_permissions($role) {
  // Anonymous.
  $permissions['anonymous'] = array(
    'view node.topic.field_content_visibility:public content',
  );

  // Authenticated.
  $permissions['authenticated'] = array_merge($permissions['anonymous'], array(
    'create topic content',
    'delete own topic content',
    'edit own topic content',
    'override topic published option',
    'view node.topic.field_content_visibility:community content',
  ));


  // Content manager.
  $permissions['contentmanager'] = array_merge($permissions['authenticated'], array(

  ));

  // Site manager.
  $permissions['sitemanager'] = array_merge($permissions['contentmanager'], array(

  ));

  return $permissions[$role];
}
