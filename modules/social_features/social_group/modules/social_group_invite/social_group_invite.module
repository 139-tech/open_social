<?php

/**
 * @file
 * The Social Invite group module.
 */

use Drupal\group\Entity\GroupInterface;

/**
 * Implements hook_menu_local_actions_alter().
 */
function social_group_invite_menu_local_actions_alter(&$local_actions) {
  // Remove "Invite members" button.
  if (isset($local_actions['ginvite.invitation.bulk'])) {
    unset($local_actions['ginvite.invitation.bulk']);
  }
  // Remove "Invite member" button.
  if (isset($local_actions['ginvite.invite_member'])) {
    unset($local_actions['ginvite.invite_member']);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function social_group_invite_preprocess_views_view(&$variables) {
  /** @var \Drupal\views\ViewExecutable $view */
  $view = &$variables['view'];

  // See function social_group_preprocess_views_view(&$variables).
  // We have to override the local actions block.
  // and render our own block instance in the view for placement.
  // hook_theme_registry_alter will ensure our hooks is invoked later.
  // That is also why hook_menu_local_actions_alter won't work.
  // Get current group so we can build correct links.
  if ($view->id() === 'group_manage_members' &&
    _social_group_invite_current_type_enabled_invites()) {
    $entity = \Drupal::entityTypeManager()->getStorage('block')
      ->load('socialinviteactionsblock');

    if (NULL !== $entity) {
      $block_content = \Drupal::entityTypeManager()
        ->getViewBuilder('block')
        ->view($entity);

      if (!empty($block_content)) {
        $variables['header']['actions'] = $block_content;
      }
    }
  }
}

/**
 * Check if current group it's group_type has invites enabled.
 *
 * @return bool
 *  TRUE if it's enabled.
 */
function _social_group_invite_current_type_enabled_invites() {
  $enabled = FALSE;
  $group = _social_group_get_current_group();
  // Check if group type has content plugin enabled.
  if ($group instanceof GroupInterface) {
    $group_type = $group->getGroupType();
    if ($group_type->hasContentPlugin('group_invitation')) {
      $enabled = TRUE;
    }
  }

  return $enabled;
}

/**
 * Implements hook_theme_registry_alter().
 */
function social_group_invite_theme_registry_alter(&$theme_registry) {
  // Unfortunately the preprocess functions aren't ordered by module weight.
  // Changing module weight doesn't work, also with dependency set to
  // social_group this should be dealt with but isnt.
  // So we enforce our preprocess after social_group.
  if (!empty($theme_registry['views_view']['preprocess functions'])) {
    $current_key = array_search('social_group_invite_preprocess_views_view', $theme_registry['views_view']['preprocess functions'], FALSE);
    unset($theme_registry['views_view']['preprocess functions'][$current_key]);
    // Give it a new key all the way at the end.
    $theme_registry['views_view']['preprocess functions'][] = 'social_group_invite_preprocess_views_view';
  }
}
