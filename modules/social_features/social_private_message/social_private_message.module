<?php

/**
 * @file
 * The Social Privagte Message module.
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;


/**
 * Implements hook_element_info_alter().
 */
function social_private_message_element_info_alter(array &$info) {
  if (isset($info['text_format']['#process'])) {
    $info['text_format']['#process'][] = 'social_private_message_filter_process_format';
  }
}

/**
 * Implements hook_filter_format_disable().
 */
function social_private_message_filter_process_format($element) {
  // Only supported format is plain text.
  $element['#format'] = 'plain_text';
  $element['format']['format']['#access'] = FALSE;
  $element['format']['format']['#value'] = 'plain_text';
  $element['format']['help']['#access'] = FALSE;
  $element['format']['format']['#options'] = ['plain_text' => 'Plain Text'];

  return $element;
}


/**
 * Implements hook_js_alter().
 */
function social_private_message_js_alter(&$javascript, \Drupal\Core\Asset\AttachedAssetsInterface $assets) {
  // Remove Js coming from the private_message module.
  if (isset($javascript['modules/contrib/private_message/js/private_message_inbox_block.js'])) {
    unset($javascript['modules/contrib/private_message/js/private_message_inbox_block.js']);
  }
}

/**
 * Implements hook_entity_view_alter().
 */
function social_private_message_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  // Threads.
  if ($entity->getEntityTypeId() === 'private_message_thread') {
    /* @var \Drupal\private_message\Entity\PrivateMessageThread $thread */
    $thread = $entity;
    $members = $thread->getMembers();

    // Remove myself from the array.
    foreach ($members as $key => $member) {
      if (Drupal::currentUser()->id() === $member->id()) {
        unset($members[$key]);
      }
    }
    // Count the amount of members.
    $member_count = count($members);

    $profile_picture = '';

    $build['members']['#markup'] = (($member_count > 1) ? '<span class=“group-icon”></span>' : $profile_picture);
    // Add classes so the thread shows up in a card.
    $classes = [
      'private-message-thread-inbox',
      'private-message-thread',
      'card'
    ];
    // Overwrite the prefix/suffix from the view builder.
    $build['#prefix'] = '<div id="private-message-thread-' . $thread->id() . '" class="' . implode(' ', $classes) . '" data-thread-id="' . $thread->id() . '" data-last-update="' . $thread->get('updated')->value . '"><div class="card__block">';
    $build['#suffix'] = '</div></div>';
  }
}
