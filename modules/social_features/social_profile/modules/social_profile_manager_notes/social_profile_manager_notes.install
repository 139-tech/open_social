<?php

/**
 * @file
 * The social profile manager notes install file.
 */

use Drupal\search_api\Entity\Index;
use Drupal\user\Entity\User;
use Drupal\user\Entity\Role;

/**
 * Implements hook_install().
 */
function social_profile_manager_notes_install() {

  // Set some default permissions.
   _social_profile_manager_notes_set_permissions();

}

/**
 * Function to set permissions.
 */
function _social_profile_manager_notes_set_permissions() {
  $roles = Role::loadMultiple();

  /** @var \Drupal\user\Entity\Role $role */
  foreach ($roles as $role) {
    if ($role->id() === 'administrator') {
      continue;
    }

    $permissions = _social_profile_manager_notes_get_permissions($role->id());
    user_role_grant_permissions($role->id(), $permissions);
  }
}

/**
 * Return the permissions per role.
 *
 * @param string $role
 *   The role to get the permissions for.
 *
 * @return array
 *   A list of permissions.
 */
function _social_profile_manager_notes_get_permissions($role) {
  // Anonymous.
  $permissions['anonymous'] = [];

  // Authenticated.
  $permissions['authenticated'] = array_merge($permissions['anonymous'], []);

  // Content manager.
  $permissions['contentmanager'] = array_merge($permissions['authenticated'], []);

  // Site manager.
  $permissions['sitemanager'] = array_merge($permissions['contentmanager'], [
    'edit field manager notes',
    'view field manager notes',
  ]);

  if (isset($permissions[$role])) {
    return $permissions[$role];
  }
  return [];
}

/**
 * Implements hook_uninstall().
 */
function social_profile_manager_notes_uninstall() {
  \Drupal::service('config.factory')->getEditable('comment.type.comment_profile')->delete();
  \Drupal::service('config.factory')->getEditable('core.entity_form_display.comment.comment_profile.default')->delete();
  \Drupal::service('config.factory')->getEditable('core.entity_view_display.comment.comment_profile.default')->delete();
  \Drupal::service('config.factory')->getEditable('field.field.comment.comment_profile.comment_body')->delete();
  \Drupal::service('config.factory')->getEditable('field.field.profile.profile.field_manager_notes')->delete();
  \Drupal::service('config.factory')->getEditable('field.storage.profile.field_manager_notes')->delete();
}
