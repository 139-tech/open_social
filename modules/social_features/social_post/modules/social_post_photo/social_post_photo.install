<?php
/**
 * @file
 * The Social post photo installation.
 */


function social_post_photo_install() {
  // Get post storage.
  $poststorage = \Drupal::entityTypeManager()->getStorage('post');
  // Load all posts of type post.
  $posts = $poststorage->loadByProperties(['type' => 'post']);

  /** @var \Drupal\social_post\Entity\Post $post */
  foreach ($posts as $post) {
    $post->set('type','photo')->save();
  }
}

function social_post_photo_uninstall() {

  // Get post storage.
  $poststorage = \Drupal::entityTypeManager()->getStorage('post');
  // Load all posts of type post.
  $posts = $poststorage->loadByProperties(['type' => 'photo']);

  /** @var \Drupal\social_post\Entity\Post $post */
  foreach ($posts as $post) {
    $post->set('type','post')->save();
  }

  $configs = [
    'core.entity_form_display.post.photo.default',
    'core.entity_form_display.post.photo.group',
    'core.entity_form_display.post.photo.profile',
    'core.entity_view_display.post.photo.activity',
    'core.entity_view_display.post.photo.activity_comment',
    'core.entity_view_display.post.photo.default',
    'field.field.post.photo.field_post',
    'field.field.post.photo.field_post_comments',
    'field.field.post.photo.field_post_image',
    'field.field.post.photo.field_recipient_group',
    'field.field.post.photo.field_recipient_user',
    'field.field.post.photo.field_visibility',
    'field.storage.post.field_post_image',
    'image.style.social_post_photo',
    'social_post.post_type.photo',
  ];

  foreach ($configs as $config) {
    // Deleting config.
    \Drupal::configFactory()->getEditable($config)->delete();
  }
}
