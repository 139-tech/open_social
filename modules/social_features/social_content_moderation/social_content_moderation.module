<?php

/**
 * @file
 * The Social Content Moderation module file.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function social_content_moderation_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Get all 'report_' flags.
  $report_types = getFlagTypes();
  // Add each report type form.
  $report_forms = [];
  foreach ($report_types as $report_type) {
    $report_forms[] = 'flagging_' . $report_type . '_add_form';
    $report_forms[] = 'flagging_' . $report_type . '_edit_form';
  }

  if (!empty($form) && in_array($form_id, $report_forms, FALSE)) {
    // Get the term id.
    $tid = getOtherReason();
    // Only alter the form if we have a term id.
    if (NULL !== $tid) {
      // Only show the other reason input field if 'Other' is selected.
      $form['field_other_reason']['#states'] = [
        'visible' => [
          ':input[name="field_reason"]' => ['value' => 'taxonomy_term-' . $tid],
        ],
      ];
    }
  }
}

/**
 * Gets all the 'report_' flag types.
 *
 * This makes it more flexible so when new flags are
 * added, it automatically gets them as well.
 *
 * @return array
 */
function getFlagTypes() {
  $all_flags = \Drupal\flag\Entity\Flag::loadMultiple();
  $report_flags = [];
  if (!empty($all_flags)) {
    foreach ($all_flags as $flag) {
      if (strpos($flag->id, 'report_') === 0) {
        $report_flags[] = $flag->id;
      }
    }
  }

  return $report_flags;
}

/**
 * Get the 'Other' reason.
 *
 * This loads all the terms from the vocabulary 'report_reasons'
 * and then finds if we have an term called 'Other'. We then return
 * this term id.
 *
 * @return null|string
 */
function getOtherReason() {
  $reason_tid = NULL;
  // Try to load the default taxonomy terms
  // from the vocabulary 'report_reasons'.
  try {
    $taxonomy_terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
    /* @var \Drupal\taxonomy\TermStorage $taxonomy_terms */
    $reasons = $taxonomy_terms->loadTree('report_reasons');
  } catch (\Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException $e) {
    // TODO: Handle exception.
  } catch (\Drupal\Component\Plugin\Exception\PluginNotFoundException $e) {
    // TODO: Handle exception.
  }

  // Search for the 'Other' reason term and
  // get the term id, which we use as key.
  if (!empty($reasons)) {
    foreach ($reasons as $reason) {
      if (strtolower($reason->name) === 'other') {
        $reason_tid = $reason->tid;
      }
    }
  }

  return $reason_tid;
}
