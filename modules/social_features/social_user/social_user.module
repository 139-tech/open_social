<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityTypeInterface;

/**
 * Implements hook_form_FORM_ID_alter() on behalf of social_user.module.
 * @see \Drupal\user\RegisterForm method buildForm at /core/lib/Drupal/Core/Entity/EntityForm.php
 */
function social_user_form_user_register_form_alter(&$form, FormStateInterface $form_state) {
  // By default notify the user of the new account.
  if (isset($form['account']['notify']) && $form['account']['notify']['#access'] === TRUE) {
    $form['account']['notify']['#default_value'] = 1;
  }
}

/**
 * Check if an users with the input field for name or mail field is blocked.
 *
 * @param $name_or_mail string username or email adress.
 * @return bool TRUE if blocked FALSE if not blocked
 */
function social_user_is_blocked($name_or_mail) {
  $is_blocked_name = (bool) \Drupal::entityQuery('user')
    ->condition('name', $name_or_mail)
    ->condition('status', 0)
    ->execute();

  $is_blocked_mail = (bool) \Drupal::entityQuery('user')
    ->condition('mail', $name_or_mail)
    ->condition('status', 0)
    ->execute();

  if ($is_blocked_name || $is_blocked_mail) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_entity_base_field_info_alter().
 */
function social_user_entity_base_field_info_alter(&$fields, EntityTypeInterface $entity_type) {
  // Add the custom Social username constraint.
  if ($entity_type->id() == 'user' && isset($fields['name'])) {
    $fields['name']->addConstraint('SocialUserName');
  }
}

/**
 * Implements hook_form_alter().
 */
function social_user_form_user_cancel_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // Fetch the current user.
  $account = \Drupal::currentUser();
  // Check if the user has permissions.
  if ($account->hasPermission('administer account settings') === FALSE) {
    // Remove the option to cancel account and delete all related content.
    unset($form['user_cancel_method']['#options']['user_cancel_delete']);
  }
}


/**
 * Implements hook_theme().
 */
function social_user_theme() {
  return array(
    'account_header_links' => array(
      'variables' => array(
        'links' => NULL,
      ),
    ),
  );
}

/**
 * Prepares variables for the account header links.
 *
 * Default template: account-header-links.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *    - links
 */
function template_preprocess_account_header_links(&$variables) {

}