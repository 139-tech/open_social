<?php

use Drupal\Core\Render\Element;
use Drupal\Core\Form\FormStateInterface;

/**
 * @file
 * The Social group module.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 */
function social_group_form_group_open_group_add_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // Add custom submit handler just for redirect purposes.
  $form['actions']['submit']['#submit'][] = '_social_group_group_open_group_edit_form_submit';
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function social_group_form_group_open_group_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // Add custom submit handler just for redirect purposes.
  $form['actions']['submit']['#submit'][] = '_social_group_group_open_group_edit_form_submit';
}

/**
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *
 * Form submit for group_open_group_add_form and group_open_group_edit_form.
 *
 */
function _social_group_group_open_group_edit_form_submit($form, FormStateInterface $form_state) {
  // Set redirect to the group overview page when user saves a group.
  $form_state->setRedirect(
    'view.groups.user_groups',
    array('user' =>\Drupal::currentUser()->id(), array())
  );
}

/**
 * Prepares variables for profile templates.
 *
 * Default template: profile.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An array of elements to display in view mode.
 *   - profile: The profile object.
 *   - view_mode: View mode; e.g., 'full', 'teaser', etc.
 */
function social_group_preprocess_group(&$variables) {
  $group = $variables['group'];
  $variables['joined'] = FALSE;

  // Set joined to true for teaser when current logged in
  // user is member of the group.
  if ($group->getMember($variables['user'])) {
    $variables['joined'] = TRUE;
  }
}
